name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      SERVICE_NAME: ${{ secrets.CLOUD_RUN_SERVICE }}
      REGION: ${{ secrets.GCP_REGION }}
      RUN_NUMBER: ${{ github.run_number }}
      # optional: use a different secret for the deployed service name
      SERVICE_DEPLOY: ${{ secrets.CLOUD_RUN_SERVICE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: 'latest'

      - name: Google Auth (Service Account JSON)
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          create_credentials_file: true
          export_environment_variables: true

      - name: Validate & normalize names
        run: |
          set -euo pipefail
          : "${PROJECT_ID:?PROJECT_ID is empty}"
          : "${SERVICE_NAME:?CLOUD_RUN_SERVICE is empty}"
          : "${REGION:?GCP_REGION is empty}"
          SERVICE_DEPLOY="${SERVICE_DEPLOY:-$SERVICE_NAME}"

          # Validate Cloud Run service name
          if ! echo "${SERVICE_DEPLOY}" | grep -Eq '^[a-z]([-a-z0-9]*[a-z0-9])?$'; then
            echo "CLOUD_RUN_SERVICE invalid: '${SERVICE_DEPLOY}'"
            exit 1
          fi

          # Build image repo name from SERVICE_NAME (sanitize for Docker)
          IMAGE_REPO="$(echo "${SERVICE_NAME}" | tr '[:upper:]' '[:lower:]' | sed -E 's/[ _]+/-/g; s|/+|-|g')"
          if ! echo "${IMAGE_REPO}" | grep -Eq '^[a-z0-9]+([-.][a-z0-9]+)*$'; then
            echo "Invalid Docker image repo after normalization: '${IMAGE_REPO}'"
            exit 1
          fi

          echo "IMAGE_REPO=${IMAGE_REPO}" >> "$GITHUB_ENV"
          echo "IMAGE_URI=gcr.io/${PROJECT_ID}/${IMAGE_REPO}:${RUN_NUMBER}" >> "$GITHUB_ENV"
          echo "IMAGE_URI_LATEST=gcr.io/${PROJECT_ID}/${IMAGE_REPO}:latest" >> "$GITHUB_ENV"
          echo "SERVICE_DEPLOY=${SERVICE_DEPLOY}" >> "$GITHUB_ENV"

      - name: Sanity check gcloud
        run: |
          gcloud auth list
          gcloud config list
          gcloud auth print-access-token >/dev/null

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker gcr.io --quiet

      - name: Build Docker image
        run: |
          echo "Building ${IMAGE_URI}"
          docker build -t "${IMAGE_URI}" .
          docker tag "${IMAGE_URI}" "${IMAGE_URI_LATEST}"

      - name: Push Docker image to GCR
        run: |
          docker push "${IMAGE_URI}"
          docker push "${IMAGE_URI_LATEST}"

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy "${SERVICE_DEPLOY}" \
            --image "${IMAGE_URI}" \
            --region "${REGION}" \
            --platform managed \
            --allow-unauthenticated \
            --port 8000 \
            --memory 512Mi \
            --cpu 1 \
            --max-instances 10
